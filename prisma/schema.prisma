// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
  // Para PostgreSQL, 'native' geralmente é suficiente para desenvolvimento local.
  // Se precisar de um target específico para deploy (ex: ambiente Linux),
  // você pode adicionar 'linux-musl-openssl-3.0.x' ou 'debian-openssl-3.0.x' novamente.
  binaryTargets = ["native"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  // Para PostgreSQL, usamos Int como tipo para IDs autoincrementais.
  // O @default(autoincrement()) fará com que o banco de dados gere o ID automaticamente.
  // Não precisamos de @map("_id") nem @db.ObjectId para PostgreSQL.
  id       Int    @id @default(autoincrement())
  name     String
  email    String @unique
  password String
  tasks    Task[]
}

model Task {
  // O ID da Task também será Int e autoincremental.
  id          Int      @id @default(autoincrement())
  title       String
  description String
  status      String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  user        User     @relation(fields: [userId], references: [id])
  // O userId agora deve ser Int para corresponder ao tipo do ID do User.
  // Não precisamos de @db.ObjectId aqui.
  userId      Int
}
